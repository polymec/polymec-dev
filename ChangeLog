Sat Jan  7 10:05:21 PST 2017  Jeffrey Johnson <jeffjohnson@pobox.com>
    * polymec: version 1.4.1
    * Fixed a bug in partition_point_cloud_with_neighbors.
    * Fixed a glitch in the setup of simple run/batch tests.
    * Removed LIS source.

Mon Dec  5 22:56:33 PST 2016  Jeffrey Johnson <jeffjohnson@pobox.com>
    * polymec: version 1.4.0
    * Added model_get_vtable and model_set_vtable to allow vtable overrides within a model instance.
    * Added functions for stencil <-> neighbor_pairing conversions, etc.
    * Fixed several typos and oversights in documentation.
    * Cleaned up the newton_solver interface, breaking out fixed point iteration and Picard iteration into separate constructors.
    * Added a new polyhedron class.
    * Added support for generating project files for several programming IDEs (Xcode, CodeBlocks, CodeLite, Kate, Sublime).
    * Timer reports now contain timing data for all MPI ranks(!).
    * Builds now can be named and referred to, replacing lists of config options.
    * We added support for HYPRE_ext, an upcoming dynamically-loadable library that provides some extensions to HYPRE (and is licensed appropriately outside of Polymec).
    * We made some inroads into understanding the LIS solvers in the context of poor performance with INK solvers, though a lot remains to study.
    * Removed LIS solvers.
    * HYPRE and PETSc solvers are now enabled with serial (mpi=0) configurations.
    * Disabled XCode IDE when building with MPI.

Sat Nov 19 20:21:58 PST 2016  Jeffrey Johnson <jeffjohnson@pobox.com>
    * polymec: version 1.3.2
    * Added a "min_dt" option for halting simulations whose stable dt falls below a given threshold.
    * Arrays of non-field data are now stored in Silo files in a slightly more streamlined fashion.
    * Fixed a minor glitch in the installation of generated header files.
    * Added model_get_vtable and model_set_vtable to allow vtable overrides within a model instance.
    * Added functions for stencil <-> neighbor_pairing conversions, etc.
    * Fixed several typos and oversights in documentation.
    * Cleaned up the newton_solver interface, breaking out fixed point iteration and Picard iteration into separate constructors.
    * Added a new polyhedron class.
    * Added support for generating project files for several programming IDEs (Xcode, CodeBlocks, CodeLite, Kate, Sublime).
    * Timer reports now contain timing data for all MPI ranks(!).

Fri Oct 28 17:49:38 PDT 2016  Jeffrey Johnson <jeffjohnson@pobox.com>
    * polymec: version 1.3.1
    * Added support for a minimum time step in models.
    * Streamlined array variable representations in Silo files.
    * Names of generated headers need to be cached.
    * Added first-class support for garbage collection in allocators.
    * Fixed problems with untraced memory allocations (which cause failure to
      collect objects tracked within).
    * Fixed problems involving use of standard malloc/free, mixed with 
      polymec's allocators.
    * Removed explicit use of the Boehm garbage collector from the library.
    * Surrogates for system functions now use regular allocators.
    * Removed a Valgrind suppression that is no longer needed.

Fri Oct 14 18:08:47 PDT 2016  Jeffrey Johnson <jeffjohnson@pobox.com>
    * polymec: version 1.3.0
    * Added some more compiler warning suppressants.
    * Eliminated fabs() calls from the code, using reals_equal() and reals_nearly_equal() instead.
    * Changed a call to gethostname() to a call to MPI_Get_process_name().
    * Added model_run_files to run several simulations at once
    * Added "batch" command to model main functions to invoke model_run_files
    * Models now have their own global communicators that can differ from MPI_COMM_WORLD.
    * Added unit tests for model and text_buffer, fixed bugs in each.
    * Updated LIS library to 1.6.2.
    * Single precision is now formally supported by the build system.
    * Fixed several compilation errors related to using doubles in single precision.
    * Fixed several bugs related to using doubles in single precision.
    * Added type-generic math functions.
    * Linux compilers are updated to GCC 5, Clang 3.6.
    * Mac compilers are updated to those in a more recent XCode.
    * Eliminated SuperLU and local_matrix abstractions, since those preconditioners weren't productive.
    * Added a Full Approximation Storage (FAS) multigrid solver for nonlinear problems.
    * Added generic interfaces for constructing BDF/DAE/ARK integrators and Newton solvers.
    * Added Inexact Newton-Krylov implementations for these integrators/solvers that use the krylov_solver interface (LIS, PETSc, HYPRE all supported).
    * Added various features to krylov_solver interface, including copy in/out methods, diagonal scaling, scaled solves, more vector norms, etc.
    * Updated Sundials to v2.7.0.
    * Updated CMocka to v1.1.0.
    * Patched LIS to add a new convergence criterion.
    * DAE integrator now has more descriptive IC correction options.
    * Cleaned up tests for these integrators and solvers, using C99 multidimensional arrays instead of C89-style macros for the discretizations.
    * Migrator/exchanger destructors are no longer needed, as these types are garbage-collected.
    * The migrator/exchanger relationship is no longer expressed as part of the API.

Mon Aug 15 20:10:58 PDT 2016  Jeffrey Johnson <jjphatt@gmail.com>
    * polymec: version 1.2.1
    * Improved OpenMP detection.
    * Added the ability to suppress OpenMP.
    * Enabled more serious static analysis via compiler warnings/errors.
    * Fixed several minor issues uncovered by static analysis.
    * Added floating-point comparison functions
      * reals_equal - true/false if two reals are equal/not equal
      * set_real_epsilon - sets threshold for equality of reals 
      * reals_nearly_equal - true/false if two reals are within a given tolerance.

Thu Aug  4 15:53:04 PDT 2016  Jeffrey Johnson <jjphatt@gmail.com>
    * polymec: version 1.2
    * Fixed a minor problem in HDF5 library location with polyglot.
    * Fixed ordering of the HDF5 libraries.
    * Disallowing serial builds on Edison/Cori, fixing some HDF5 settings.
    * Exchangers/migrators are now garbage collected. Their destructor 
      functions are now deprecated.
    * Set up a more formal mechanism for supporting builds on specific 
      machines. Machine files are stored in a polymec-machines repo.
    * Adding Valgrind support for Travis CI via 'make memcheck'.
    * Adding support for testing on batch systems via ctest.
    * Machine files are now updated if they are already present.
    * Fixed all outstanding issues reported by Valgrind.
    * Added simple mesh-free kernels and functions back into Polymec.
    * Removed halo stencil for unstructured grids.

Fri Jun 24 21:25:33 2016  Jeffrey Johnson <jjphatt@gmail.com>
    * polymec: version 1.1
    * The implementation of the distance_based_neighbor_pairing_new function,
      bundled with the neighbor_pairing class, had a bug in its parallel 
      implementation, which has been fixed.
    * Added support for LIS Krylov solvers (no block matrix support yet).
    * Implemented parallel_sort.
    * Implemented dynamic repartitioning of point clouds.
    * Added interface support for variable-sized block krylov matrices.
    * Added logging mode for output to all ranks.
    * Various little enhancements for the build system.
    * Removed support for NERSC hopper.
    * Point cloud dynamic repartitioning now works.
    * Also, there's a new migrator type that is distinct from the exchanger 
      type, since having the latter do both exchanges and transfers was 
      confusing.
    * The Krylov matrix/vector classes no longer include assembly methods in their interfaces.
    * Numerous bugs were fixed in the HYPRE Krylov solver. The PCG, GMRES, and BICGSTAB solvers now correctly solve the 1D Laplace equation.
    *  LIS now builds with debugging symbols (and without optimization) under Debug builds.
    *  HYPRE error reporting is now improved.
    * All interfaces (LIS, PETSc, HYPRE) use 64-bit integers to store global indices.
    * Reworked the Krylov solver unit test to be thorough for PETSc/HYPRE 
      interfaces.
    * New methods have been added to the krylov_matrix class for adding and 
      inserting/getting blocks.
    * Variable and fixed block matrices are now supported in all Krylov 
      solver implementations.
    * Polymec's versioning information now doesn't include diffs in tests.
    * The build system is more selective about generating headers and version 
      information, resulting in considerable build savings when debugging 
      small numbers of files.
    * Travis CI now builds PETSc/HYPRE libraries where they are to be tested.
    * Bumped Lua to 5.3.3.
    * Bumped HDF5 to 1.10.0-patch1.
    * Added missing migrator methods, which allow us to use the migrator 
      interface and avoid the deprecated portion of the exchanger interface.
    * Simplified the logic behind the determination of HDF5 library names in 
      the 3rd-party build system in order for successful builds on NERSC 
      Edison/Cori.
    * The Lua interpreter's functions are now documented.
    * Enhanced logging features like log_mode(), more flexible ordering of log-related command line args.
    * Failed assertions now report MPI ranks.
    * Exchangers now support int64_t via MPI_INT64_T, and serialization/deserialization code has been tidied up.
    * Dynamic mesh partitioning works in all test cases. We'll see.
    * Also fixed a bug in the initial partitioning of rectilinear meshes.

Mon Mar 21 18:39:00 2016  Jeffrey Johnson <jjphatt@gmail.com>
    * polymec: version 1.0 (initial release)
    A set of high-performance software libraries that can be used to construct
    models for physical systems.
